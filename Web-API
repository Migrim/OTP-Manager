from flask import Flask, jsonify
import sqlite3
import configparser
import os

config = configparser.ConfigParser()
config_path = 'config.ini'

if not os.path.exists(config_path):
    raise FileNotFoundError(f"Configuration file '{config_path}' not found.")

config.read(config_path)

print("Config Sections:", config.sections())
for section in config.sections():
    print(f"Section [{section}] has keys: {config[section].keys()}")

if 'database' not in config or 'path' not in config['database']:
    raise KeyError("Missing 'database' section or 'path' key in the configuration file.")
if 'api' not in config or 'port' not in config['api']:
    raise KeyError("Missing 'api' section or 'port' key in the configuration file.")

app = Flask(__name__)
app.config['DATABASE'] = config['database']['path']

@app.route('/get_secrets_by_company/<kundennummer>', methods=['GET'])
def get_secrets_by_company(kundennummer):
    try:
        db_path = app.config['DATABASE']
        with sqlite3.connect(db_path) as db:
            cursor = db.cursor()
            query = """
                SELECT otp_secrets.name, otp_secrets.email, otp_secrets.secret, otp_secrets.otp_type, 
                       otp_secrets.refresh_time, otp_secrets.company_id, companies.name AS company_name, companies.password
                FROM otp_secrets
                LEFT JOIN companies ON otp_secrets.company_id = companies.company_id
                WHERE companies.kundennummer = ?
            """
            cursor.execute(query, (kundennummer,))
            secrets = cursor.fetchall()
            response = jsonify([{
                'name': row[0],
                'email': row[1],
                'secret': row[2],
                'otp_type': row[3],
                'refresh_time': row[4],
                'company_id': row[5],
                'company': row[6],
                'password': row[7]
            } for row in secrets])
            return response
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    api_port = int(config['api']['port'])
    app.run(port=api_port, debug=True)
